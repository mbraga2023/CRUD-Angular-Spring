{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CursosService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.API = 'api/cursos';\n  }\n  list(page, pageSize) {\n    const adjustedPageNumber = page - 1;\n    const params = new HttpParams().set('pageNumber', adjustedPageNumber.toString()).set('pageSize', pageSize.toString()); // Add this line\n    return this.httpClient.get(`${this.API}?${params.toString()}`);\n  }\n  loadById(id) {\n    return this.httpClient.get(`${this.API}/${id}`);\n  }\n  create(record) {\n    return this.httpClient.post(this.API, record);\n  }\n  update(record) {\n    return this.httpClient.put(`${this.API}/${record._id}`, record);\n  }\n  remove(id) {\n    return this.httpClient.delete(`${this.API}/${id}`);\n  }\n  static #_ = this.ɵfac = function CursosService_Factory(t) {\n    return new (t || CursosService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CursosService,\n    factory: CursosService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpParams","CursosService","constructor","httpClient","API","list","page","pageSize","adjustedPageNumber","params","set","toString","get","loadById","id","create","record","post","update","put","_id","remove","delete","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Michel\\Documents\\GitHub\\CRUD-Angular-Spring\\crud-angular\\src\\app\\cursos\\services\\cursos.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Cursos } from '../model/cursos';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable, first, tap } from 'rxjs';\r\nimport { Contador } from '../model/contador';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CursosService {\r\n\r\n  private readonly API = 'api/cursos';\r\n  constructor(\r\n    private httpClient: HttpClient\r\n  ) { }\r\n\r\n  list(page: number, pageSize: number): Observable<Contador> {\r\n    const adjustedPageNumber = page - 1;\r\n\r\n    const params = new HttpParams()\r\n      .set('pageNumber', adjustedPageNumber.toString())\r\n      .set('pageSize', pageSize.toString()); // Add this line\r\n\r\n    return this.httpClient.get<Contador>(`${this.API}?${params.toString()}`);\r\n  }\r\n\r\n  loadById(id: string){\r\n    return this.httpClient.get<Cursos>(`${this.API}/${id}`);\r\n  }\r\n\r\n  private create(record: Partial<Cursos>){\r\n    return this.httpClient.post<Cursos>(this.API, record);\r\n  }\r\n\r\n  private update(record: Partial<Cursos>){\r\n    return this.httpClient.put<Cursos>(`${this.API}/${record._id}`, record);\r\n  }\r\n\r\n  remove(id: string){\r\n    return this.httpClient.delete(`${this.API}/${id}`);\r\n  }\r\n}\r\n"],"mappings":"AAEA,SAAqBA,UAAU,QAAQ,sBAAsB;;;AAO7D,OAAM,MAAOC,aAAa;EAGxBC,YACUC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IAFH,KAAAC,GAAG,GAAG,YAAY;EAG/B;EAEJC,IAAIA,CAACC,IAAY,EAAEC,QAAgB;IACjC,MAAMC,kBAAkB,GAAGF,IAAI,GAAG,CAAC;IAEnC,MAAMG,MAAM,GAAG,IAAIT,UAAU,EAAE,CAC5BU,GAAG,CAAC,YAAY,EAAEF,kBAAkB,CAACG,QAAQ,EAAE,CAAC,CAChDD,GAAG,CAAC,UAAU,EAAEH,QAAQ,CAACI,QAAQ,EAAE,CAAC,CAAC,CAAC;IAEzC,OAAO,IAAI,CAACR,UAAU,CAACS,GAAG,CAAW,GAAG,IAAI,CAACR,GAAG,IAAIK,MAAM,CAACE,QAAQ,EAAE,EAAE,CAAC;EAC1E;EAEAE,QAAQA,CAACC,EAAU;IACjB,OAAO,IAAI,CAACX,UAAU,CAACS,GAAG,CAAS,GAAG,IAAI,CAACR,GAAG,IAAIU,EAAE,EAAE,CAAC;EACzD;EAEQC,MAAMA,CAACC,MAAuB;IACpC,OAAO,IAAI,CAACb,UAAU,CAACc,IAAI,CAAS,IAAI,CAACb,GAAG,EAAEY,MAAM,CAAC;EACvD;EAEQE,MAAMA,CAACF,MAAuB;IACpC,OAAO,IAAI,CAACb,UAAU,CAACgB,GAAG,CAAS,GAAG,IAAI,CAACf,GAAG,IAAIY,MAAM,CAACI,GAAG,EAAE,EAAEJ,MAAM,CAAC;EACzE;EAEAK,MAAMA,CAACP,EAAU;IACf,OAAO,IAAI,CAACX,UAAU,CAACmB,MAAM,CAAC,GAAG,IAAI,CAAClB,GAAG,IAAIU,EAAE,EAAE,CAAC;EACpD;EAAC,QAAAS,CAAA,G;qBA/BUtB,aAAa,EAAAuB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAb3B,aAAa;IAAA4B,OAAA,EAAb5B,aAAa,CAAA6B,IAAA;IAAAC,UAAA,EAFZ;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}