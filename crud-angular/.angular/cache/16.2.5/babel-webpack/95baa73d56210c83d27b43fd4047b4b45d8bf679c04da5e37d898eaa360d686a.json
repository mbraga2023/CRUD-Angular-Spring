{"ast":null,"code":"import { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"@angular/material/button\";\nexport class ConfirmationDialogComponent {\n  constructor(dialogRef, data) {\n    this.dialogRef = dialogRef;\n    this.data = data;\n  }\n  onConfirm(result) {\n    this.dialogRef.close(result);\n  }\n  static #_ = this.ɵfac = function ConfirmationDialogComponent_Factory(t) {\n    return new (t || ConfirmationDialogComponent)(i0.ɵɵdirectiveInject(i1.MatDialogRef), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ConfirmationDialogComponent,\n    selectors: [[\"app-confirmation-dialog\"]],\n    decls: 8,\n    vars: 1,\n    consts: [[\"mat-dialog-content\", \"\"], [\"mat-dialog-actions\", \"\"], [\"mat-button\", \"\", 3, \"click\"]],\n    template: function ConfirmationDialogComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"p\");\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(3, \"div\", 1)(4, \"button\", 2);\n        i0.ɵɵlistener(\"click\", function ConfirmationDialogComponent_Template_button_click_4_listener() {\n          return ctx.onConfirm(true);\n        });\n        i0.ɵɵtext(5, \"Sim\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"button\", 2);\n        i0.ɵɵlistener(\"click\", function ConfirmationDialogComponent_Template_button_click_6_listener() {\n          return ctx.onConfirm(false);\n        });\n        i0.ɵɵtext(7, \"N\\u00E3o\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.data);\n      }\n    },\n    dependencies: [i1.MatDialogContent, i1.MatDialogActions, i2.MatButton],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["MAT_DIALOG_DATA","ConfirmationDialogComponent","constructor","dialogRef","data","onConfirm","result","close","_","i0","ɵɵdirectiveInject","i1","MatDialogRef","_2","selectors","decls","vars","consts","template","ConfirmationDialogComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","ConfirmationDialogComponent_Template_button_click_4_listener","ConfirmationDialogComponent_Template_button_click_6_listener","ɵɵadvance","ɵɵtextInterpolate"],"sources":["C:\\Users\\Michel\\Documents\\GitHub\\Angular-Spring-CRUD\\crud-angular\\src\\app\\cursos\\components\\confirmation-dialog\\confirmation-dialog.component.ts","C:\\Users\\Michel\\Documents\\GitHub\\Angular-Spring-CRUD\\crud-angular\\src\\app\\cursos\\components\\confirmation-dialog\\confirmation-dialog.component.html"],"sourcesContent":["import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-confirmation-dialog',\n  templateUrl: './confirmation-dialog.component.html',\n  styleUrls: ['./confirmation-dialog.component.scss']\n})\nexport class ConfirmationDialogComponent {\n\n    constructor(\n      public dialogRef: MatDialogRef<ConfirmationDialogComponent>,\n      @Inject(MAT_DIALOG_DATA) public data: string,\n    ) {}\n\n    onConfirm(result: boolean): void {\n      this.dialogRef.close(result);\n    }\n}\n","<div mat-dialog-content>\n  <p>{{ data }}</p>\n</div>\n<div mat-dialog-actions>\n  <button mat-button (click)=\"onConfirm(true)\">Sim</button>\n  <button mat-button (click)=\"onConfirm(false)\">Não</button>\n\n</div>\n"],"mappings":"AACA,SAASA,eAAe,QAAsB,0BAA0B;;;;AAOxE,OAAM,MAAOC,2BAA2B;EAEpCC,YACSC,SAAoD,EAC3BC,IAAY;IADrC,KAAAD,SAAS,GAATA,SAAS;IACgB,KAAAC,IAAI,GAAJA,IAAI;EACnC;EAEHC,SAASA,CAACC,MAAe;IACvB,IAAI,CAACH,SAAS,CAACI,KAAK,CAACD,MAAM,CAAC;EAC9B;EAAC,QAAAE,CAAA,G;qBATQP,2BAA2B,EAAAQ,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,YAAA,GAAAH,EAAA,CAAAC,iBAAA,CAI1BV,eAAe;EAAA;EAAA,QAAAa,EAAA,G;UAJhBZ,2BAA2B;IAAAa,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,qCAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCRxCX,EAAA,CAAAa,cAAA,aAAwB;QACnBb,EAAA,CAAAc,MAAA,GAAU;QAAAd,EAAA,CAAAe,YAAA,EAAI;QAEnBf,EAAA,CAAAa,cAAA,aAAwB;QACHb,EAAA,CAAAgB,UAAA,mBAAAC,6DAAA;UAAA,OAASL,GAAA,CAAAhB,SAAA,CAAU,IAAI,CAAC;QAAA,EAAC;QAACI,EAAA,CAAAc,MAAA,UAAG;QAAAd,EAAA,CAAAe,YAAA,EAAS;QACzDf,EAAA,CAAAa,cAAA,gBAA8C;QAA3Bb,EAAA,CAAAgB,UAAA,mBAAAE,6DAAA;UAAA,OAASN,GAAA,CAAAhB,SAAA,CAAU,KAAK,CAAC;QAAA,EAAC;QAACI,EAAA,CAAAc,MAAA,eAAG;QAAAd,EAAA,CAAAe,YAAA,EAAS;;;QAJvDf,EAAA,CAAAmB,SAAA,GAAU;QAAVnB,EAAA,CAAAoB,iBAAA,CAAAR,GAAA,CAAAjB,IAAA,CAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}