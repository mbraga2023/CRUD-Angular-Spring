{"ast":null,"code":"import { of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/cursos.service\";\nexport class CourseResolver {\n  constructor(service) {\n    this.service = service;\n  }\n  resolve(route, state) {\n    if (route.params && route.params['id']) {\n      return this.service.loadById(route.params['id']).pipe(catchError(error => {\n        console.error(`Error loading course: ${error}`);\n        return of({\n          _id: '',\n          name: '',\n          category: ''\n        });\n      }));\n    }\n    return of({\n      _id: '',\n      name: '',\n      category: ''\n    });\n  }\n  static #_ = this.ɵfac = function CourseResolver_Factory(t) {\n    return new (t || CourseResolver)(i0.ɵɵinject(i1.CursosService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CourseResolver,\n    factory: CourseResolver.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["of","catchError","CourseResolver","constructor","service","resolve","route","state","params","loadById","pipe","error","console","_id","name","category","_","i0","ɵɵinject","i1","CursosService","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Michel\\Documents\\GitHub\\Angular-Spring-CRUD\\crud-angular\\src\\app\\cursos\\guards\\curso.resolver.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { CursosService } from '../services/cursos.service';\nimport { Cursos } from '../model/cursos';\nimport { Observable, of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CourseResolver {\n\n  constructor(private service: CursosService) { }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<Cursos> {\n    if (route.params && route.params['id']) {\n      return this.service.loadById(route.params['id'])\n        .pipe(\n          catchError(error => {\n            console.error(`Error loading course: ${error}`);\n            return of({ _id: '', name: '', category: '' });\n          })\n        );\n    }\n    return of({ _id: '', name: '', category: '' });\n  }\n}\n"],"mappings":"AAIA,SAAqBA,EAAE,QAAQ,MAAM;AACrC,SAASC,UAAU,QAAQ,gBAAgB;;;AAK3C,OAAM,MAAOC,cAAc;EAEzBC,YAAoBC,OAAsB;IAAtB,KAAAA,OAAO,GAAPA,OAAO;EAAmB;EAE9CC,OAAOA,CAACC,KAA6B,EAAEC,KAA0B;IAC/D,IAAID,KAAK,CAACE,MAAM,IAAIF,KAAK,CAACE,MAAM,CAAC,IAAI,CAAC,EAAE;MACtC,OAAO,IAAI,CAACJ,OAAO,CAACK,QAAQ,CAACH,KAAK,CAACE,MAAM,CAAC,IAAI,CAAC,CAAC,CAC7CE,IAAI,CACHT,UAAU,CAACU,KAAK,IAAG;QACjBC,OAAO,CAACD,KAAK,CAAC,yBAAyBA,KAAK,EAAE,CAAC;QAC/C,OAAOX,EAAE,CAAC;UAAEa,GAAG,EAAE,EAAE;UAAEC,IAAI,EAAE,EAAE;UAAEC,QAAQ,EAAE;QAAE,CAAE,CAAC;MAChD,CAAC,CAAC,CACH;;IAEL,OAAOf,EAAE,CAAC;MAAEa,GAAG,EAAE,EAAE;MAAEC,IAAI,EAAE,EAAE;MAAEC,QAAQ,EAAE;IAAE,CAAE,CAAC;EAChD;EAAC,QAAAC,CAAA,G;qBAfUd,cAAc,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,aAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAdnB,cAAc;IAAAoB,OAAA,EAAdpB,cAAc,CAAAqB,IAAA;IAAAC,UAAA,EAFb;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}