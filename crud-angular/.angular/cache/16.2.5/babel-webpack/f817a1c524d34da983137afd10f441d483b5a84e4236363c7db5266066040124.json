{"ast":null,"code":"import { first, tap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CursosService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.API = 'api/cursos';\n  }\n  list() {\n    return this.httpClient.get(this.API) //Observable que retorna um array de Cursos\n    .pipe(first(), tap(cursos => console.log(cursos)));\n  }\n  save(record) {\n    console.log('record');\n    if (record._id) {\n      return this.update(record);\n      console.log('update');\n    }\n    console.log('create');\n    return this.create(record);\n  }\n  loadById(id) {\n    return this.httpClient.get(`${this.API}/${id}`);\n  }\n  create(record) {\n    return this.httpClient.post(this.API, record);\n  }\n  update(record) {\n    return this.httpClient.put(`${this.API}/${record._id}`, record);\n  }\n  static #_ = this.ɵfac = function CursosService_Factory(t) {\n    return new (t || CursosService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CursosService,\n    factory: CursosService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["first","tap","CursosService","constructor","httpClient","API","list","get","pipe","cursos","console","log","save","record","_id","update","create","loadById","id","post","put","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Michel\\Documents\\GitHub\\Angular-Spring-CRUD\\crud-angular\\src\\app\\cursos\\services\\cursos.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Cursos } from '../model/cursos';\nimport { HttpClient } from '@angular/common/http';\nimport { delay, first, pipe, tap } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CursosService {\n\n  private readonly API = 'api/cursos';\n  constructor(\n    private httpClient: HttpClient\n  ) { }\n\n  list(){\n    return this.httpClient.get<Cursos[]>(this.API)//Observable que retorna um array de Cursos\n  .pipe(\n    first(),\n    tap (cursos => console.log(cursos))\n  );\n  }\n\n  save(record: Partial<Cursos>){\n    console.log('record');\n    if(record._id){\n      return this.update(record);\n      console.log('update');\n\n    }\n    console.log('create');\n\n    return this.create(record);\n  }\n\n  loadById(id: string){\n    return this.httpClient.get<Cursos>(`${this.API}/${id}`);\n  }\n\n  private create(record: Partial<Cursos>){\n    return this.httpClient.post<Cursos>(this.API, record);\n  }\n\n  private update(record: Partial<Cursos>){\n    return this.httpClient.put<Cursos>(`${this.API}/${record._id}`, record);\n  }\n}\n"],"mappings":"AAGA,SAAgBA,KAAK,EAAQC,GAAG,QAAQ,MAAM;;;AAK9C,OAAM,MAAOC,aAAa;EAGxBC,YACUC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IAFH,KAAAC,GAAG,GAAG,YAAY;EAG/B;EAEJC,IAAIA,CAAA;IACF,OAAO,IAAI,CAACF,UAAU,CAACG,GAAG,CAAW,IAAI,CAACF,GAAG,CAAC;IAAA,CAC/CG,IAAI,CACHR,KAAK,EAAE,EACPC,GAAG,CAAEQ,MAAM,IAAIC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC,CAAC,CACpC;EACD;EAEAG,IAAIA,CAACC,MAAuB;IAC1BH,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;IACrB,IAAGE,MAAM,CAACC,GAAG,EAAC;MACZ,OAAO,IAAI,CAACC,MAAM,CAACF,MAAM,CAAC;MAC1BH,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;;IAGvBD,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;IAErB,OAAO,IAAI,CAACK,MAAM,CAACH,MAAM,CAAC;EAC5B;EAEAI,QAAQA,CAACC,EAAU;IACjB,OAAO,IAAI,CAACd,UAAU,CAACG,GAAG,CAAS,GAAG,IAAI,CAACF,GAAG,IAAIa,EAAE,EAAE,CAAC;EACzD;EAEQF,MAAMA,CAACH,MAAuB;IACpC,OAAO,IAAI,CAACT,UAAU,CAACe,IAAI,CAAS,IAAI,CAACd,GAAG,EAAEQ,MAAM,CAAC;EACvD;EAEQE,MAAMA,CAACF,MAAuB;IACpC,OAAO,IAAI,CAACT,UAAU,CAACgB,GAAG,CAAS,GAAG,IAAI,CAACf,GAAG,IAAIQ,MAAM,CAACC,GAAG,EAAE,EAAED,MAAM,CAAC;EACzE;EAAC,QAAAQ,CAAA,G;qBArCUnB,aAAa,EAAAoB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAbxB,aAAa;IAAAyB,OAAA,EAAbzB,aAAa,CAAA0B,IAAA;IAAAC,UAAA,EAFZ;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}