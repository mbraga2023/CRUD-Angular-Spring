{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../services/cursos.service\";\nimport * as i3 from \"@angular/material/card\";\nimport * as i4 from \"@angular/material/button\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/input\";\nimport * as i7 from \"@angular/material/select\";\nimport * as i8 from \"@angular/material/core\";\nexport class CursosFormComponent {\n  constructor(formBuilder, service) {\n    this.formBuilder = formBuilder;\n    this.service = service;\n    this.form = this.formBuilder.group({\n      name: [null],\n      category: [null]\n    });\n  }\n  ngOnInit() {}\n  onSubmit() {\n    this.service.save(this.form.value).subscribe(result => console.log(result));\n    //console.log(this.form.value);\n  }\n\n  onCancel() {\n    // You can access form values using this.form.value\n    console.log(this.form.value);\n    // Add your form submission logic here\n  }\n  static #_ = this.ɵfac = function CursosFormComponent_Factory(t) {\n    return new (t || CursosFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.CursosService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CursosFormComponent,\n    selectors: [[\"app-cursos-form\"]],\n    decls: 23,\n    vars: 1,\n    consts: [[3, \"formGroup\"], [1, \"full-width\"], [\"matInput\", \"\", \"placeholder\", \"Nome\", \"formControlName\", \"name\", \"required\", \"\"], [\"formControlName\", \"category\"], [\"value\", \"null\"], [\"value\", \"front-end\"], [\"value\", \"back-end\"], [\"align\", \"start\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"], [\"mat-raised-button\", \"\", 3, \"click\"]],\n    template: function CursosFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-card\")(1, \"mat-card-header\")(2, \"mat-card-title\");\n        i0.ɵɵtext(3, \"Cadastrar\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(4, \"mat-card-content\")(5, \"form\", 0)(6, \"div\")(7, \"mat-form-field\", 1);\n        i0.ɵɵelement(8, \"input\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"mat-form-field\", 1)(10, \"mat-label\");\n        i0.ɵɵtext(11, \"Categoria\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"mat-select\", 3);\n        i0.ɵɵelement(13, \"mat-option\", 4);\n        i0.ɵɵelementStart(14, \"mat-option\", 5);\n        i0.ɵɵtext(15, \"Front-End\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"mat-option\", 6);\n        i0.ɵɵtext(17, \"Back-End\");\n        i0.ɵɵelementEnd()()()()()();\n        i0.ɵɵelementStart(18, \"mat-card-actions\", 7)(19, \"button\", 8);\n        i0.ɵɵlistener(\"click\", function CursosFormComponent_Template_button_click_19_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵtext(20, \"Salvar\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"button\", 9);\n        i0.ɵɵlistener(\"click\", function CursosFormComponent_Template_button_click_21_listener() {\n          return ctx.onCancel();\n        });\n        i0.ɵɵtext(22, \"Cancelar\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n      }\n    },\n    dependencies: [i3.MatCard, i3.MatCardActions, i3.MatCardContent, i3.MatCardHeader, i3.MatCardTitle, i4.MatButton, i5.MatFormField, i5.MatLabel, i6.MatInput, i7.MatSelect, i8.MatOption, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\".full-width[_ngcontent-%COMP%] {\\n  width: 100%;\\n}\\n\\nmat-card[_ngcontent-%COMP%] {\\n  max-width: 80%;\\n  margin: 2em auto;\\n  text-align: center;\\n}\\n\\n.min-width[_ngcontent-%COMP%] {\\n  width: 100%;\\n  min-width: 150px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY3Vyc29zL2N1cnNvcy1mb3JtL2N1cnNvcy1mb3JtLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBQTtBQUNGOztBQUVBO0VBQ0UsY0FBQTtFQUNBLGdCQUFBO0VBQ0Esa0JBQUE7QUFDRjs7QUFFQTtFQUNFLFdBQUE7RUFDQSxnQkFBQTtBQUNGIiwic291cmNlc0NvbnRlbnQiOlsiLmZ1bGwtd2lkdGgge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG5tYXQtY2FyZCB7XHJcbiAgbWF4LXdpZHRoOiA4MCU7XHJcbiAgbWFyZ2luOiAyZW0gYXV0bzsvLzJ4IGEgbWFyZ2VtIHBhZHLDg8Kjb1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG5cclxuLm1pbi13aWR0aHtcclxuICB3aWR0aDogMTAwJTtcclxuICBtaW4td2lkdGg6IDE1MHB4Oy8vdGFtYW5obyBtw4PCrW5pbW8gZG8gZm9ybXVsYXJpb1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["CursosFormComponent","constructor","formBuilder","service","form","group","name","category","ngOnInit","onSubmit","save","value","subscribe","result","console","log","onCancel","_","i0","ɵɵdirectiveInject","i1","FormBuilder","i2","CursosService","_2","selectors","decls","vars","consts","template","CursosFormComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵlistener","CursosFormComponent_Template_button_click_19_listener","CursosFormComponent_Template_button_click_21_listener","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\Michel\\Documents\\GitHub\\Angular-Spring-CRUD\\crud-angular\\src\\app\\cursos\\cursos-form\\cursos-form.component.ts","C:\\Users\\Michel\\Documents\\GitHub\\Angular-Spring-CRUD\\crud-angular\\src\\app\\cursos\\cursos-form\\cursos-form.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { CursosService } from '../services/cursos.service';\n\n@Component({\n  selector: 'app-cursos-form',\n  templateUrl: './cursos-form.component.html',\n  styleUrls: ['./cursos-form.component.scss'],\n\n})\nexport class CursosFormComponent {\nform: FormGroup;\n\nconstructor(\n  private formBuilder: FormBuilder,\n  private service: CursosService\n  ) {\n  this.form = this.formBuilder.group({\n    name: [null],\n    category: [null]\n  });\n}\n\n  ngOnInit(): void{\n\n  }\n\n  onSubmit() {\n    this.service.save(this.form.value).subscribe(result => console.log(result));\n    //console.log(this.form.value);\n  }\n\n  onCancel() {\n    // You can access form values using this.form.value\n    console.log(this.form.value);\n\n    // Add your form submission logic here\n  }\n\n}\n","<mat-card >\n  <mat-card-header>\n    <mat-card-title>Cadastrar</mat-card-title>\n  </mat-card-header>\n\n  <mat-card-content>\n    <form [formGroup]=\"form\" >\n      <div>\n        <mat-form-field class=\"full-width\">\n          <input matInput placeholder=\"Nome\" formControlName=\"name\" required>\n        </mat-form-field>\n\n        <mat-form-field class=\"full-width\">\n          <mat-label>Categoria</mat-label>\n          <mat-select formControlName=\"category\">\n            <mat-option value=\"null\"> </mat-option>\n            <mat-option value=\"front-end\">Front-End</mat-option>\n            <mat-option value=\"back-end\">Back-End</mat-option>\n          </mat-select>\n        </mat-form-field>\n      </div>\n\n   </form>\n  </mat-card-content>\n  <mat-card-actions align=\"start\">\n    <button mat-raised-button color=\"primary\"  (click)=\"onSubmit()\">Salvar</button>\n    <button mat-raised-button  (click)=\"onCancel()\">Cancelar</button>\n  </mat-card-actions>\n</mat-card>\n"],"mappings":";;;;;;;;;AAUA,OAAM,MAAOA,mBAAmB;EAGhCC,YACUC,WAAwB,EACxBC,OAAsB;IADtB,KAAAD,WAAW,GAAXA,WAAW;IACX,KAAAC,OAAO,GAAPA,OAAO;IAEf,IAAI,CAACC,IAAI,GAAG,IAAI,CAACF,WAAW,CAACG,KAAK,CAAC;MACjCC,IAAI,EAAE,CAAC,IAAI,CAAC;MACZC,QAAQ,EAAE,CAAC,IAAI;KAChB,CAAC;EACJ;EAEEC,QAAQA,CAAA,GAER;EAEAC,QAAQA,CAAA;IACN,IAAI,CAACN,OAAO,CAACO,IAAI,CAAC,IAAI,CAACN,IAAI,CAACO,KAAK,CAAC,CAACC,SAAS,CAACC,MAAM,IAAIC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC,CAAC;IAC3E;EACF;;EAEAG,QAAQA,CAAA;IACN;IACAF,OAAO,CAACC,GAAG,CAAC,IAAI,CAACX,IAAI,CAACO,KAAK,CAAC;IAE5B;EACF;EAAC,QAAAM,CAAA,G;qBA3BUjB,mBAAmB,EAAAkB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,aAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAnBxB,mBAAmB;IAAAyB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,6BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCVhCb,EAAA,CAAAe,cAAA,eAAW;QAESf,EAAA,CAAAgB,MAAA,gBAAS;QAAAhB,EAAA,CAAAiB,YAAA,EAAiB;QAG5CjB,EAAA,CAAAe,cAAA,uBAAkB;QAIVf,EAAA,CAAAkB,SAAA,eAAmE;QACrElB,EAAA,CAAAiB,YAAA,EAAiB;QAEjBjB,EAAA,CAAAe,cAAA,wBAAmC;QACtBf,EAAA,CAAAgB,MAAA,iBAAS;QAAAhB,EAAA,CAAAiB,YAAA,EAAY;QAChCjB,EAAA,CAAAe,cAAA,qBAAuC;QACrCf,EAAA,CAAAkB,SAAA,qBAAuC;QACvClB,EAAA,CAAAe,cAAA,qBAA8B;QAAAf,EAAA,CAAAgB,MAAA,iBAAS;QAAAhB,EAAA,CAAAiB,YAAA,EAAa;QACpDjB,EAAA,CAAAe,cAAA,qBAA6B;QAAAf,EAAA,CAAAgB,MAAA,gBAAQ;QAAAhB,EAAA,CAAAiB,YAAA,EAAa;QAO5DjB,EAAA,CAAAe,cAAA,2BAAgC;QACaf,EAAA,CAAAmB,UAAA,mBAAAC,sDAAA;UAAA,OAASN,GAAA,CAAAvB,QAAA,EAAU;QAAA,EAAC;QAACS,EAAA,CAAAgB,MAAA,cAAM;QAAAhB,EAAA,CAAAiB,YAAA,EAAS;QAC/EjB,EAAA,CAAAe,cAAA,iBAAgD;QAArBf,EAAA,CAAAmB,UAAA,mBAAAE,sDAAA;UAAA,OAASP,GAAA,CAAAhB,QAAA,EAAU;QAAA,EAAC;QAACE,EAAA,CAAAgB,MAAA,gBAAQ;QAAAhB,EAAA,CAAAiB,YAAA,EAAS;;;QApB3DjB,EAAA,CAAAsB,SAAA,GAAkB;QAAlBtB,EAAA,CAAAuB,UAAA,cAAAT,GAAA,CAAA5B,IAAA,CAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}