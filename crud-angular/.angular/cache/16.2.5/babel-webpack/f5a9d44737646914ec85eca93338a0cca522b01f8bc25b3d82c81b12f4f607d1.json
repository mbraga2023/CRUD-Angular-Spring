{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/cursos.service\";\nimport * as i3 from \"@angular/material/snack-bar\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/router\";\nimport * as i6 from \"@angular/material/card\";\nimport * as i7 from \"@angular/material/button\";\nimport * as i8 from \"@angular/material/form-field\";\nimport * as i9 from \"@angular/material/input\";\nimport * as i10 from \"@angular/material/select\";\nimport * as i11 from \"@angular/material/core\";\nfunction CursosFormComponent_mat_error_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Nome \\u00E9 obrigat\\u00F3rio\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class CursosFormComponent {\n  constructor(formBuilder, service, snackBar, location, route) {\n    this.formBuilder = formBuilder;\n    this.service = service;\n    this.snackBar = snackBar;\n    this.location = location;\n    this.route = route;\n    this.form = this.formBuilder.group({\n      _id: [''],\n      name: ['', [Validators.required, Validators.minLength(5), Validators.maxLength(100)]],\n      category: ['', [Validators.required]] // Define 'category' control\n    });\n  }\n\n  getErrorMessage() {\n    const nameControl = this.form.get('name');\n    if (nameControl && nameControl.hasError('required')) {\n      return 'You must enter a value';\n    }\n    if (nameControl && (nameControl.hasError('minlength') || nameControl.hasError('maxlength'))) {\n      return 'Name should be between 5 and 100 characters';\n    }\n    return '';\n  }\n  ngOnInit() {\n    const curso = this.route.snapshot.data['curso'];\n    this.form.setValue({\n      _id: curso._id,\n      name: curso.name,\n      category: curso.category // Add 'category' control\n    });\n  }\n\n  onSubmit() {\n    if (this.form.valid) {\n      this.service.save(this.form.value).subscribe(result => this.onSuccess(), error => this.onError());\n    }\n  }\n  onCancel() {\n    this.location.back();\n  }\n  onError() {\n    this.snackBar.open('Erro ao salvar curso', '', {\n      duration: 5000\n    });\n  }\n  onSuccess() {\n    this.snackBar.open('Curso salvo com sucesso', '', {\n      duration: 5000\n    });\n    this.onCancel();\n  }\n  static #_ = this.ɵfac = function CursosFormComponent_Factory(t) {\n    return new (t || CursosFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.CursosService), i0.ɵɵdirectiveInject(i3.MatSnackBar), i0.ɵɵdirectiveInject(i4.Location), i0.ɵɵdirectiveInject(i5.ActivatedRoute));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CursosFormComponent,\n    selectors: [[\"app-cursos-form\"]],\n    decls: 24,\n    vars: 2,\n    consts: [[1, \"min-width\", 3, \"formGroup\"], [1, \"full-width\"], [\"matInput\", \"\", \"placeholder\", \"Nome\", \"formControlName\", \"name\", \"required\", \"\"], [4, \"ngIf\"], [\"formControlName\", \"category\"], [\"value\", \"null\"], [\"value\", \"front-end\"], [\"value\", \"back-end\"], [\"align\", \"start\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"], [\"mat-raised-button\", \"\", 3, \"click\"]],\n    template: function CursosFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-card\")(1, \"mat-card-header\")(2, \"mat-card-title\");\n        i0.ɵɵtext(3, \"Cadastrar\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(4, \"mat-card-content\")(5, \"form\", 0)(6, \"div\")(7, \"mat-form-field\", 1);\n        i0.ɵɵelement(8, \"input\", 2);\n        i0.ɵɵtemplate(9, CursosFormComponent_mat_error_9_Template, 2, 0, \"mat-error\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"mat-form-field\", 1)(11, \"mat-label\");\n        i0.ɵɵtext(12, \"Categoria\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"mat-select\", 4);\n        i0.ɵɵelement(14, \"mat-option\", 5);\n        i0.ɵɵelementStart(15, \"mat-option\", 6);\n        i0.ɵɵtext(16, \"Front-End\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"mat-option\", 7);\n        i0.ɵɵtext(18, \"Back-End\");\n        i0.ɵɵelementEnd()()()()()();\n        i0.ɵɵelementStart(19, \"mat-card-actions\", 8)(20, \"button\", 9);\n        i0.ɵɵlistener(\"click\", function CursosFormComponent_Template_button_click_20_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵtext(21, \"Salvar\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"button\", 10);\n        i0.ɵɵlistener(\"click\", function CursosFormComponent_Template_button_click_22_listener() {\n          return ctx.onCancel();\n        });\n        i0.ɵɵtext(23, \"Cancelar\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        let tmp_1_0;\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx.form.get(\"name\")) == null ? null : tmp_1_0.hasError(\"required\"));\n      }\n    },\n    dependencies: [i4.NgIf, i6.MatCard, i6.MatCardActions, i6.MatCardContent, i6.MatCardHeader, i6.MatCardTitle, i7.MatButton, i8.MatFormField, i8.MatLabel, i8.MatError, i9.MatInput, i10.MatSelect, i11.MatOption, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\".full-width[_ngcontent-%COMP%] {\\n  width: 100%;\\n}\\n\\nmat-card[_ngcontent-%COMP%] {\\n  max-width: 80%;\\n  margin: 2em auto;\\n  text-align: center;\\n}\\n\\n.min-width[_ngcontent-%COMP%] {\\n  width: 100%;\\n  min-width: 150px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY3Vyc29zL0NvbnRhaW5lcnMvY3Vyc29zLWZvcm0vY3Vyc29zLWZvcm0uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFBO0FBQ0Y7O0FBRUE7RUFDRSxjQUFBO0VBQ0EsZ0JBQUE7RUFDQSxrQkFBQTtBQUNGOztBQUVBO0VBQ0UsV0FBQTtFQUNBLGdCQUFBO0FBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyIuZnVsbC13aWR0aCB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbm1hdC1jYXJkIHtcclxuICBtYXgtd2lkdGg6IDgwJTtcclxuICBtYXJnaW46IDJlbSBhdXRvOy8vMnggYSBtYXJnZW0gcGFkcsODwqNvXHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59XHJcblxyXG4ubWluLXdpZHRoe1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIG1pbi13aWR0aDogMTUwcHg7Ly90YW1hbmhvIG3Dg8KtbmltbyBkbyBmb3JtdWxhcmlvXHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","CursosFormComponent","constructor","formBuilder","service","snackBar","location","route","form","group","_id","name","required","minLength","maxLength","category","getErrorMessage","nameControl","get","hasError","ngOnInit","curso","snapshot","data","setValue","onSubmit","valid","save","value","subscribe","result","onSuccess","error","onError","onCancel","back","open","duration","_","ɵɵdirectiveInject","i1","FormBuilder","i2","CursosService","i3","MatSnackBar","i4","Location","i5","ActivatedRoute","_2","selectors","decls","vars","consts","template","CursosFormComponent_Template","rf","ctx","ɵɵelement","ɵɵtemplate","CursosFormComponent_mat_error_9_Template","ɵɵlistener","CursosFormComponent_Template_button_click_20_listener","CursosFormComponent_Template_button_click_22_listener","ɵɵadvance","ɵɵproperty","tmp_1_0"],"sources":["C:\\Users\\Michel\\Documents\\GitHub\\Angular-Spring-CRUD\\crud-angular\\src\\app\\cursos\\Containers\\cursos-form\\cursos-form.component.ts","C:\\Users\\Michel\\Documents\\GitHub\\Angular-Spring-CRUD\\crud-angular\\src\\app\\cursos\\Containers\\cursos-form\\cursos-form.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormGroup, NonNullableFormBuilder, Validators } from '@angular/forms';\nimport { CursosService } from '../../services/cursos.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Location } from '@angular/common';\nimport { ActivatedRoute } from '@angular/router';\nimport { Cursos } from '../../model/cursos';\n\n@Component({\n  selector: 'app-cursos-form',\n  templateUrl: './cursos-form.component.html',\n  styleUrls: ['./cursos-form.component.scss'],\n\n})export class CursosFormComponent {\n  form: FormGroup;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private service: CursosService,\n    private snackBar: MatSnackBar,\n    private location: Location,\n    private route: ActivatedRoute\n  ) {\n    this.form = this.formBuilder.group({\n      _id: [''],\n      name: ['', [Validators.required, Validators.minLength(5), Validators.maxLength(100)]],\n      category: ['', [Validators.required]] // Define 'category' control\n    });\n  }\n\n  getErrorMessage() {\n    const nameControl: AbstractControl | null = this.form.get('name');\n    if (nameControl && nameControl.hasError('required')) {\n      return 'You must enter a value';\n    }\n    if (nameControl && (nameControl.hasError('minlength') || nameControl.hasError('maxlength'))) {\n      return 'Name should be between 5 and 100 characters';\n    }\n\n    return '';\n  }\n\n  ngOnInit(): void {\n    const curso: Cursos = this.route.snapshot.data['curso'];\n    this.form.setValue({\n      _id: curso._id,\n      name: curso.name,\n      category: curso.category // Add 'category' control\n    });\n  }\n\n  onSubmit() {\n    if (this.form.valid) {\n      this.service.save(this.form.value)\n        .subscribe(\n          result => this.onSuccess(),\n          error => this.onError()\n        );\n    }\n  }\n\n  onCancel() {\n    this.location.back();\n  }\n\n  private onError() {\n    this.snackBar.open('Erro ao salvar curso', '', { duration: 5000 });\n  }\n\n  private onSuccess() {\n    this.snackBar.open('Curso salvo com sucesso', '', { duration: 5000 });\n    this.onCancel();\n  }\n}\n","<mat-card>\n  <mat-card-header>\n    <mat-card-title>Cadastrar</mat-card-title>\n  </mat-card-header>\n\n  <mat-card-content>\n    <form [formGroup]=\"form\" class=\"min-width\">\n      <div>\n        <mat-form-field class=\"full-width\">\n          <input matInput placeholder=\"Nome\" formControlName=\"name\" required>\n          <mat-error *ngIf=\"form.get('name')?.hasError('required')\">Nome é obrigatório</mat-error>\n        </mat-form-field>\n\n        <mat-form-field class=\"full-width\">\n          <mat-label>Categoria</mat-label>\n          <mat-select formControlName=\"category\">\n            <mat-option value=\"null\"> </mat-option>\n            <mat-option value=\"front-end\">Front-End</mat-option>\n            <mat-option value=\"back-end\">Back-End</mat-option>\n          </mat-select>\n        </mat-form-field>\n      </div>\n    </form>\n  </mat-card-content>\n  <mat-card-actions align=\"start\">\n    <button mat-raised-button color=\"primary\" (click)=\"onSubmit()\">Salvar</button>\n    <button mat-raised-button (click)=\"onCancel()\">Cancelar</button>\n  </mat-card-actions>\n</mat-card>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}